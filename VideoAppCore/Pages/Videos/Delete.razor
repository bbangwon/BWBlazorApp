@page "/Videos/Delete/{id:int}"
@inject IVideoRepositoryAsync repository
@inject NavigationManager navigationManager

<h3>Delete</h3>

@if (video != null)
{
    <form>
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>ID: </label>
                    @video.Id
                </div>
                <div class="form-group">
                    <label>Title: </label>
                    @video.Title
                </div>
                <div class="form-group">
                    <label>Url: </label>
                    @video.Url
                </div>
                <div class="form-group">
                    <label>Name: </label>
                    @video.Name
                </div>
                <div class="form-group">
                    <label>Created: </label>
                    @video.Created.ToShortDateString()
                </div>
                <div class="form-group">
                    <input type="button" value="Delete" id="btnDelete_Click" @onclick="btnDelete_Click" />
                    <input type="button" value="Cancel" id="btnCancel_Click" @onclick="btnCancel_Click" />
                    
                </div>
            </div>
        </div>
    </form>
}

@code {
    [Parameter]
    public int Id { get; set; }

    Video? video = new Video();

    protected override async Task OnInitializedAsync()
    {
        video = await repository.GetByIdAsync(Id);

    }

    async Task btnDelete_Click()
    {
        await repository.RemoveVideoAsync(Id);

        navigationManager.NavigateTo("/Videos");
    }

    void btnCancel_Click()
    {
        navigationManager.NavigateTo("/Videos");
    }
}
